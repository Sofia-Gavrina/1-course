#include <cmath>
#include <iomanip>
#include <iostream>

using namespace std;

/**
 * @brief Считывает значение типа double из стандартного ввода
 * @return Введённое пользователем значение типа double
 * @note В случае некорректного ввода программа завершится с ошибкой
 */
double getValue();

/**
 * @brief Точка входа в программу
 *
 * Эта программа запрашивает у пользователя начальное и конечное значения x,
 * а также шаг приращения. Затем для каждого x в диапазоне выводит значение функции:
 * y = sqrt(1 - x) - cos(sqrt(1 - x)), если x ≤ 1, иначе сообщает, что решения нет.
 *
 * Основные шаги:
 * - Ввод начального и конечного значений x.
 * - Проверка корректности диапазона.
 * - Ввод шага приращения.
 * - Итерация по диапазону с указанным шагом.
 * - Вычисление и вывод значений функции или сообщения об отсутствии решения.
 *
 * @return 0 при успешном завершении, 1 при ошибке ввода или некорректных данных
 */
int main() {
    cout << "Введите начальное значение x: ";
    double x_initial_value = getValue();

    cout << "Введите конечное значение x: ";
    double x_final_value = getValue();

    if (x_initial_value > x_final_value) {
        cout << "Неверный отрезок" << endl;
        return 1;
    }

    cout << "Введите шаг приращения: ";
    double step = getValue();
    if (step <= 0) {
        cout << "Неверное приращение функции" << endl;
        return 1;
    }

    // Вывод заголовков таблицы с форматированием
    cout << fixed << setprecision(4);
    cout << setw(20) << "x" << setw(30) << "y" << endl;

    // Итерация по диапазону с указанным шагом
    for (double x = x_initial_value; x < x_final_value + step; x += step) {
        if (x > 1) {
            // Для x > 1 решение не существует, выводим сообщение
            cout << setw(20) << x << setw(30) << " Нет решения" << endl;
        } else {
            // Вычисление функции при допустимых значениях
            double y = sqrt(1 - x) - cos(sqrt(1 - x));
            cout << setw(20) << x << setw(30) << y << endl;
        }
    }

    return 0;
}

/**
 * @brief Считывает значение типа double из стандартного ввода
 *
 * Функция читает число из cin. Если ввод некорректен,
 * выводит сообщение об ошибке и завершает программу.
 *
 * @return Введённое значение типа double
 */
double getValue() {
    double value; // Инициализация переменной перед использованием
    cin >> value;
    if (cin.fail()) {
        cerr << "Некорректное значение" << endl;
        abort(); // Завершение программы при ошибке ввода
    }
    return value;
}
